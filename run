#!/bin/bash

print_usage () {
	echo "Usage:"
	echo "  run [ <mode> [ <no_of_hidden_nodes> ] ]"
	echo "where mode=0 runs interactive evolution with allied surrogate users"
	echo "      mode=1 runs with opposing surrogate users"
}

OPPOSING_USERS=0
HIDDEN_NODES=2

source batch-vars

# parsing arguments
case $# in
2)
	case $2 in
	0)
		echo Zero hidden nodes makes no sense
		print_usage
		exit 1
		;;
	[0-9]*)
		HIDDEN_NODES=$2
		;;
	*)
		print_usage
		exit 1
		;;
	esac
	;&
1)
	case $1 in
	0)
		;;
	1)
		OPPOSING_USERS=1
		;;
	*)
		print_usage
		exit 1
		;;
	esac
	;;
0)
	;;
*)
	print_usage
	exit 1
	;;
esac

# recompiling the code with appropriate no of hidden nodes

sed -i -e "s/\(layerSizes\[1\] = \).*/\1${HIDDEN_NODES};/" userModel.cpp
if [ $OPPOSING_USERS -eq 1 ]; then
	echo -n "Compiling the opposing client ... "
	make M3-opposing > /dev/null 2>&1 && echo "done"
	mv M3-opposing $M3_OPPOSING > /dev/null 2>&1
fi

echo -n "Compiling the code with ${HIDDEN_NODES} hidden nodes in TAU ... "
make -j4 > /dev/null 2>&1 && echo "done"
mv M3 $M3 > /dev/null 2>&1

# running clients & server
./$M3 -null > SavedFiles/server_output.log 2>&1 &
sleep 1
if [ $OPPOSING_USERS -eq 1 ]; then
	./runclient 1 > /dev/null 2>&1 &
else
	./runclient > /dev/null 2>&1 &
fi
sleep 15
./runclient > /dev/null 2>&1 &

